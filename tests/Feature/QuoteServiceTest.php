<?php

namespace Tests\Feature;

use App\Models\Quote;
use App\Services\QuoteService;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Collection;
use Tests\TestCase;

class QuoteServiceTest extends TestCase
{
    /**
     * @var QuoteService
     */
    private $quoteService;
    /**
     * @var Quote
     */
    private $quote;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->quote = new Quote();
        $this->quoteService = new QuoteService($this->quote);
    }

    public function testItShouldReturnDefaultNumberOfQuotes()
    {
        $quotes = $this->quoteService->getRandomQuotes();

        $this->assertEquals(5, $quotes->count());
    }

    public function testItShouldReturnDifferentNumberOfQuotes()
    {
        $quotes = $this->quoteService->getRandomQuotes(2);

        $this->assertEquals(2, $quotes->count());
    }

    public function testItShouldReturnFirstQuote()
    {
        $quotes = $this->quoteService->getRandomQuotes(1);

        $this->assertEquals($this->quote->getQuotes()->get(0), $quotes->getCollection()->get(0));

        $this->assertEquals(1, $quotes->count());
    }

    public function testItShouldPaginateAndReturnSecondOne()
    {
        $quotes = $this->quoteService->getRandomQuotes(1, 2);

        $this->assertEquals($this->quote->getQuotes()->get(1), $quotes->getCollection()->get(0));

        $this->assertEquals(1, $quotes->count());
    }
}
